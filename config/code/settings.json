{
    "editor.inlayHints.enabled": "on",
    "workbench.colorTheme": "Default Dark Modern",
    "telemetry.telemetryLevel": "off",
    "dart.flutterSdkPath": "/home/juha/dev/flutter",
    "vim.camelCaseMotion.enable": true,
    "vim.incsearch": true,
    "vim.useSystemClipboard": false,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.leader": "<space>",
    "vim.handleKeys": {
    },
    "vim.normalModeKeyBindings": [
      {
        "before": ["<leader>", "w", "f"],
        "after": ["<leader>", "<leader>", "/"]
      },
      {
        "before": ["*"],
        "after": ["*", "<ESC>"]
      },
      {
        "before": ["#"],
        "after": ["#", "<ESC>"]
      },
      {
        "before": ["<C-d>"],
        "after": ["<C-d>", "z", "z"]
      },
      {
        "before": ["<C-u>"],
        "after": ["<C-u>", "z", "z"]
      }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
      {
        "before": ["<leader>", "d"],
        "after": ["d", "d"]
      },
      {
        "before": ["<leader>", "n"],
        "commands": [":nohl"]
      },
      {
        "before": ["g", "r"],
        "commands": ["editor.action.goToReferences"]
      },
      {
        "before": ["g", "i"],
        "commands": ["editor.action.goToImplementation"]
      },
      {
        "before": ["<leader>", "w"],
        "commands": ["workbench.action.files.save"]
      },
      {
        "before": ["<leader>", "b"],
        "commands": ["editor.debug.action.toggleBreakpoint"]
      },
      {
        "before": ["]", "c"],
        "commands": ["editor.action.dirtydiff.next"]
      },
      {
        "before": ["[", "c"],
        "commands": ["editor.action.dirtydiff.previous"]
      },
      {
        "before": ["[", "d"],
        "commands": ["editor.action.marker.prev"]
      },
      {
        "before": ["]", "d"],
        "commands": ["editor.action.marker.next"]
      },
      {
        "before": ["t", "g"],
        "commands": ["workbench.action.findInFiles"]
      },
      {
        "before": ["t", "f"],
        "commands": ["workbench.action.quickOpen"]
      },
      {
        "before": ["<leader>", "q", "a"],
        "commands": ["workbench.action.closeWindow"]
      },
      {
        "before": ["<leader>", "o", "s"],
        "commands": ["workbench.action.openRecent"]
      },
      {
        "before": ["=", "="],
        "commands": ["editor.action.reindentselectedlines"]
      },
      {
        "before": ["<leader>", "r", "n"],
        "commands": ["editor.action.rename"]
      },
      {
        "before": ["<leader>", "f"],
        "commands": ["editor.action.formatDocument"]
      },
      {
        "before": ["<leader>", "h", "r"],
        "commands": ["git.revertSelectedRanges"]
      },
      {
        "before": ["<leader>", "h", "s"],
        "commands": ["git.stageSelectedRanges"]
      },
      {
        "before": ["<leader>", "g", "b"],
        "commands": ["gitlens.toggleFileBlame"]
      },
      {
        "before": ["<leader>", "e"],
        "commands": ["workbench.action.toggleSidebarVisibility"]
      },
      {
        "before": ["<leader>", "t", "o"],
        "commands": ["workbench.action.closeOtherEditors"]
      },
      {
        "before": ["<leader>", "t", "c"],
        "commands": ["workbench.action.closeActiveEditor"]
      },
      {
        "before": ["<leader>", "t", "a"],
        "commands": ["workbench.action.closeAllEditors"]
      },
      {
        "before": ["<C-k>"],
        "commands": ["editor.action.triggerParameterHints"]
      },
      {
        "before": ["<leader>", "m"],
        "commands": ["bookmarks.toggle"]
      },
      {
        "before": ["<leader>", "b", "l"],
        "commands": ["bookmarks.listFromAllFiles"]
      },
      {
        "before": ["<leader>", "f"],
        "commands": ["editor.action.formatDocument"]
      },
      {
        "before": ["<leader>", "t", "f"],
        "commands": ["workbench.action.quickOpen"]
      },
      {
        "before": ["<leader>", "t", "g"],
        "commands": ["workbench.action.findInFiles"]
      },
      {
        "before": ["<leader>", "p"],
        "after": ["\"", "+", "p"]
      },
      {
        "before": ["<leader>", "P"],
        "after": ["\"", "+", "P"]
      }
    ],
    "vim.insertModeKeyBindings": [
      {
        "before": ["<C-c>"],
        "after": ["<Esc>"]
      },
      {
        "before": ["<C-p>"],
        "commands": ["editor.action.triggerParameterHints"]
      },
      {
        "before": ["<C-k>"],
        "commands": ["editor.action.triggerParameterHints"]
      }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
      {
        "before": ["<leader>", "y"],
        "after": ["\"", "+", "y"]
      },
      {
        "before": ["<leader>", "p"],
        "after": ["\"", "+", "p"]
      },
      {
        "before": ["<leader>", "P"],
        "after": ["\"", "+", "P"]
      },
      {
        "before": ["<leader>", "d"],
        "after": ["\"", "+", "d"]
      }
    ],
    "vim.commandLineModeKeyBindings": [
    ],
    "vim.timeout": 250,
    "vim.smartRelativeLine": true,
    "files.autoSave": "afterDelay",
    "gitlens.blame.format": "${id}  ${author|15} ${date|16}",
    "gitlens.defaultDateFormat": "YYYY-MM-DD HH:mm",
    "rust-analyzer.check.command": "clippy",
    "gopls": {
      "ui.semanticTokens": true
    },
    "[astro]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.inlayHints.enumMemberValues.enabled": true,
    "javascript.inlayHints.parameterNames.enabled": "all",
    "javascript.inlayHints.parameterTypes.enabled": true,
    "javascript.inlayHints.variableTypes.enabled": true,
    "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true
}
